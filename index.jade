- var SDIR = '/static'; // static directory
- var VDIR = SDIR + '/vendor'; // vendor directory
- var TEMPLATE_DEBUG = false;
!!!
html(lang="en_US")
  head
    meta(charset="UTF-8")

    title Service Manager

    meta(name="viewport", content="width=device-width, initial-scale=1.0")

    //- Bootstrap!
    if TEMPLATE_DEBUG
      link(rel="stylesheet/less", type="text/css", href=SDIR + "/styles.less")
      script(src=VDIR + "/less.js")
    else
      link(rel="stylesheet", type="text/css", href=SDIR + "/styles.css")

    //- Service manager!
    script(src=SDIR + "/bower/requirejs/require.js",
      data-main=SDIR + "/js/main")
    script(src=SDIR + "/js/config.js")

  body

    .container

      header.page-header
        h1 Service Manager
        p.lead
          | Manage the web services that process documents.

      article
        .service-manager

    //- Templates!

    //- Service list element.
    script(type="text/html")#tServiceListItem
      a(href="\#{{name}}/edit", data-name="{{name}}").service-label
        h4
          | {{name}}
        p.muted
          | {{url}}

    //- Service form wrapper!
    script(type="text/html")#tServiceForm
      form.service-edit.form-horizontal.well

    //- Modal!
    script(type="text/html")#tModal
      .modal.hide#modal
        .modal-header
          button(type="button", class="close",
            data-dismiss="modal", aria-hidden="true") &times;
          h3 {{title}}
        .modal-body
        .modal-footer
          a(data-dismiss="modal").btn {{okayText}}

    //- Loading box.
    script(type="text/html")#tIndefiniteLoading
      h3 {{ title }}
      .progress.progress-striped.active
        div(style="width: 100%").bar

    //-
      {{& labelHTML}}   HTML of the label.
      {{inputFor}}      input ID
      {{{controls}}}    HTML for controls
      {{extraClasses}}  Extra classes for the entire div.

    script(type="text/html")#tFormControlGroup
      div(class="{{extraClasses}}").control-group
        label(for="{{inputFor}}").control-label {{{labelHTML}}}
        .controls
          {{{controls}}}

    //-
      {{name}}          Name of the parameter
      {{genID}}         Generated ID for the input
      {{placeholder}}   Input placeholder
      {{initialValue}}  Initial value
    script(type="text/html")#tSimpleTextBoxControl
      input(id="{{genID}}",
        name="{{name}}", value="{{initialValue}}",
        type="text", placeholder="{{placeholder}}").input-xlarge

    //-
      {{name}}          Name of the parameter
      {{genID}}         Generated ID for the input
      {{placeholder}}   Input placeholder
      {{initialValue}}  Initial value
      {{defaultValue}}  Default value
      {{helpText}}      Help text
    script(type="text/html")#tDefaultableTextControl
      .input-append
        input(value="{{genID}}",
          name="{{name}}", value="{{initialValue}}",
          type="text", placeholder="{{placeholder}}").input-mini
        button(type='button',
          data-default="{{defaultValue}}").btn.btn-inverse Use Default
      | {{#helpText}}
      span.help-block {{helpText}}
      | {{/helpText}}

    //-
      {{options}}       Options available.
      {{id}}              Identify the selection
      {{text}}            Display text
    script(type="text/html")#tToggleButtonControl
      div(data-toggle="buttons-radio").btn-group
        | {{#options}}
        button(type="button",
          class="btn{{#active}} active{{/active}}",
          data-option="{{id}}") {{text}}
        | {{/options}}

    //- No weird templating here, baus!
    script(type="text/html")#tServiceEditActions
      button(type="submit").btn.btn-primary
        | Save
      | &nbsp;
      button(type="button", data-test).btn
        | Test
      | &nbsp;
      //-
        button(type="button", data-close).btn
          | Cancel
        | &nbsp;
      button(type="button", data-delete).btn.btn-danger.pull-right
        | Delete

    //- The old edit thingy.
    script(type="text/html")#tOldEdit
      form.service-edit.form-horizontal.well

        //- Name
        .control-group
          label.control-label Name
          .controls
            input(value="wikifier", type="text").input-xlarge

        //- URL
        .control-group
          label.control-label URL
          .controls
            input(value="http://localhost", type="text").input-xlarge

        //- Method
        .control-group
          label.control-label Method
          .controls
            div(data-toggle="buttons-radio").btn-group
              button(type="button").btn.active POST
              button(type="button").btn GET

        //- doc param
        .control-group
          label.control-label Document parameter
          .controls.control-row
            .input-append
              input(value="id", type="text").input-mini
              button(type='button').btn.btn-inverse Use Default
            span.help-block
              | The parameter that the manager will use to send the
              | ID of one Ludicrous document.

        //- app param
        .control-group
          label.control-label Application parameter
          .controls.control-row
            .input-append
              input(value="app", type="text").input-mini
              button(type='button').btn.btn-inverse Use Default
            span.help-block
              | The parameter that the manager will use to send the
              | name of an entire Ludicrous application.

        //- Extra parameters
        .control-group
          label.control-label Extra parameters
          .controls.control-row
            input(type="text", data-params)

        .form-actions
          button(type="submit").btn.btn-primary
            //i.icon-ok
            | Save
          | &nbsp;
          button(type="button", data-test).btn.btn-success
            | Test
          | &nbsp;
          button(type="button", data-close).btn
            | Cancel
          | &nbsp;
          button(type="button", data-delete).btn.btn-danger.pull-right
            | Delete


